include ../inc/head.pug

div.content
    div.container
        div.container-8
            div.box
                div.question-header
                    img(src='/assets/img/avatars/' + question.User.avatar).avatar
                    h2.question-title #{question.title}
                        span.question-author #{question.User.name} | #{moment(question.createdAt).fromNow()}
                    span.action-right.question-right
                        if question.resolvedAt
                            i.material-icons.resolved-icon check_circle
                            | Résolue (#{moment(question.resolvedAt).fromNow()})
                        else if user && (question.User.id == user.id || user.role == 'admin')
                            i.material-icons.edit edit
                            a(href='/q/' + question.id + '/delete').nostyle
                                i.material-icons.delete delete
                    span(style='display:none').action-right.question-right#edit
                        | En cours d'édition...
                        form(method='post', action='/q/' + question.id + '/edit')
                            input#editTitleField(type='hidden', name='title', value='')
                            input#editDescriptionField(type='hidden', name='description', value='')
                            button#editButton(type='submit').btn.small
                                i.material-icons check
                                | Enregistrer
                
                if user && (question.User.id == user.id || user.role == 'admin')
                    input(type='text', name='title', value=question.title, placeholder='Titre')#editTitle
                
                div.question-content !{question.description}

                if question.Comments.length
                    h4 #{question.Comments.length} réponse(s)
                    hr
                    div.comments
                        each comment in question.Comments
                            div.comment
                                img(src='/assets/img/avatars/' + comment.User.avatar).avatar
                                div.comment-author #{comment.User.name} | #{moment(comment.createdAt).fromNow()}
                                    div(id='commentContent-' + comment.id).comment-content !{comment.content}
                                
                                if user && (comment.User.id == user.id || user.role == 'admin') && !question.resolvedAt
                                    span.action-right
                                        i(data-id=comment.id).material-icons.edit edit
                                        a(href='/q/comment/' + comment.id + '/delete').nostyle
                                            i.material-icons.delete delete
                                            <div id="myModal" class="modal">

                    div#editModal.modal
                        div.modal-content
                            span.close &times;
                            form(method='post', action='/q/' + question.id + '/comment/edit')
                                input(type='hidden', name='id', value='')#editCommentId
                                textarea(name='content')#editCommentContent.tinycomment
                                button(type='submit').btn
                                    i.material-icons check
                                    | Enregistrer

                hr
                if !user
                    p Vous devez vous 
                        a(href='/account/login') connecter 
                        | pour répondre à cette question.
                else if question.resolvedAt
                    p Cette question a été marquée comme résolue.
                else                    
                    p.suggest Partagez le lien de cette question via 
                        a(href='#') email
                        | , 
                        a(href='#') Google+
                        | , 
                        a(href='#') Twitter
                        |  ou 
                        a(href='#') Facebook
                        | .
                        
                    p.ultralight Votre réponse
                    form(method='post')
                        textarea(name='content')#newComment.tinycomment
                        button(type='button').btn.answer Envoyer la réponse
                
                        
        div.container-4
            if user && (question.User.id == user.id || user.role == 'admin') && !question.resolvedAt
                div.container-12
                    div.box
                        h4 Votre problème est résolu ?
                        p.light Marquez-le comme résolu pour indiquer que vous avez résolu votre problème. Vous ne pourrez plus recevoir de réponses à cette question.
                        form(method='post', action='/q/' + question.id + '/resolve')
                            button(type='button').btn.resolved
                                i.material-icons check_circle
                                | Marquer comme résolu
                            
            div.container-12
                div.box.secondary
                    h4 
                        i.material-icons help_outline
                        | Tips for asking questions
                    p.light Every question you ask should help you gather either facts or an opinion. Know which kind of information you need and frame your questions accordingly.
                    hr
                    h4 
                        i.material-icons help_outline
                        | Search & Research
                    p.light Even if you don't find a useful answer elsewhere on the site, including links to related questions that haven't helped can help others in understanding how your question is different from the rest.

                    hr
                    div.secondary-footer
                        a(href='#') Still need help? Contact Support

include ../inc/foot.pug
script(src='/assets/js/question/main.js')
